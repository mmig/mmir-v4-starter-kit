<?xml version="1.0"?>
<!-- 
	This Ant-Build-File is for the generation of the directory structure in json format.generate
	It generates - for the directories specified in the property 'directoriesToParse' - a file (property 'outputDirectoryParseFileJson') with a json string.
-->
<project name="Mobile DialogSystem - Parse eHTML" default="parseTemplatesNodeJsEnv">
	
    <!-- 
    	
    	parseTemplateXXX targets:
		
		Will parse all (view) templates *.ehtml and then store compiled templates (*.js).
		
		Parsing the templates will automatically check, if there are (syntax) errors
		in the template files.
		
		In addition to storing the compiled templates, checksum-files are created too
		The checksums are calculated with regard to the original template files *.ehtml:
		 these can be used to determine if the compiled template file is up-to-date.
		
		NOTE: Currently, this target will alway create the compiled template files
		      (regardless whether or not the checkusm-files would indicate no changes or not).
		
	-->
	
	<import file="mmir-build.xml"/>

	<import file="${antScriptViewsTemplate}"/>
	
	<!--  ############# Build Targets: tasks for Templates (.ehtml) #############  -->
	
	<!-- delete all compiled template files: -->
	<target name="cleanTemplateFiles">
	    <delete dir="${jsGenDirBase}views"/>
	</target>
	
	<target name="createTemplateParserFileNodeJs" depends="checkNodeJsAvailable,cleanTemplateFiles,generateFileListJSONFile,createTempCompileDir">
					
			<echo message="Running node.js environment with script file &quot;${exec.js.compile.ant.views.template}&quot; and no arguments" />
			
			<exec executable="${exec.nodejs}" failonerror="true">
				<arg value="${exec.js.compile.ant.views.template}"/>
	        </exec>
			
			<echo message="created generator script for grammars." />
			
	</target>
	
	<target name="parseTemplatesRhinoEnv"
		depends="createTemplateParserFileAnt"
			description="Parse eHTML Template files with Rhino environment (slow)">
			
		<echo message="Running Rhino environment with arguments &quot;-jar ${pathRhinoJar} -opt -1 ${exec.js.compile.template.parser} ${baseDir} ${execBuildLibDir}&quot;" />
		<exec executable="java" failonerror="true">
            <arg line="-jar ${pathRhinoJar} -opt -1 ${exec.js.compile.template.parser} ${baseDir} ${execBuildLibDir}" />
        </exec>
        
		<!-- Need to re-create filelist, since new files may have been created (or deleted).
			 NOTE that inheritAll needs to be false in order to force re-reading of directories/files.
		 -->
		<antcall target="generateFileListJSONFile" inheritAll="false" />
		<echo>Finished parsing templates (RHINO).</echo>
	</target>
	
	<target name="parseTemplatesNodeJsEnv"
			depends="createTemplateParserFileNodeJs"
			description="Parse eHTML Template files with NodeJS environment">
		
		<echo message="Running node.js environment with script file &quot;${exec.js.compile.template.parser}&quot; and arguments &quot;${baseDir} ${execBuildLibDir}&quot;" />
		<exec executable="${exec.nodejs}" failonerror="true">
            <arg value="${exec.js.compile.template.parser}"/>
            <arg value="${baseDir}"/>
            <arg value="${execBuildLibDir}"/>
        </exec>
        
		<!-- Need to re-create filelist, since new files may have been created (or deleted).
			 NOTE that inheritAll needs to be false in order to force re-reading of directories/files.
		 -->
		<antcall target="generateFileListJSONFile" inheritAll="false" />
		<echo>Finished parsing templates (NODEJS).</echo>
	</target>
	
</project>

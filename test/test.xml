<?xml version="1.0"?>
<!-- 
	This Ant-Build-File is for the testing of the mmig-project
	it utilizes the jstestdriver and jasmine framework for this purpose.
-->
<project name="Testing of Mobile DialogSystem" default="test-all">
    <echo>BaseDir: ${basedir}</echo>
	<!-- 
	* Config-file: test.settings
	-->
	<property name="testsettings.filename" value="test.settings" />
	<property name="browserOK" value="false" />

	<!--
	* Check if settings file exists
	-->
	<available file="${testsettings.filename}" property="test.settings.present"/>
	<fail unless="test.settings.present" message="Missing test-file: ${testsettings.filename}" />
	<property file="${testsettings.filename}"/>
	
	<!-- <target name="test-all" depends="check_config,start-server" description="Start all tests"> -->
	<target name="test-all" depends="start-test" description="Start all tests">
    </target>
    
	<!-- 
	* Checks if the binary (JAR-file) of the jstestdriver-suite exists
	* and if directory to config files is known.
	-->
	<target name="file-checks">
		<condition property="config.jstestdriver.found" else="false">
			<and>
				<available file="${jstestdriver.bin}"/>
				<length string="${jstestdriver.bin}" when="greater" length="0" />		    
			</and>   		    
   		</condition>
		<fail unless="${config.jstestdriver.found}" message="Missing jar-file: '${jstestdriver.bin}'" />

		<condition property="jstestdriver.config.dir.found" else="false">
			<and>
				<available file="${jstestdriver.config.dir}"  type="dir"/>
				<length string="${jstestdriver.config.dir}" when="greater" length="0" />		    
			</and>   		    
   		</condition>
		<fail unless="${jstestdriver.config.dir.found}" message="Missing configuration directory: '${jstestdriver.config.dir}'" />
  		<!--  <available file="/usr/local/somefile" property="second.file.found"/>  -->
	</target>
	
	<!-- 
	* Checks if a browser is properly "configured" in the config-file. 
	* For a proper configuration of a browser, the path to its binary must be
	* known. Also a parameter for the jstestdriver is generated in this target.
	-->
	<target name="browser-checks">
   		<condition property="config.browser.firefox.found" else="false">
		<and>
	   		<available file="${browser.firefox}"/>
		    <length string="${browser.firefox}" when="greater" length="0" />		    
		</and>   		    
   		</condition>
   		<condition property="config.browser.iexplore.found" else="false">
		<and>
	   		<available file="${browser.iexplore}"/>
		    <length string="${browser.iexplore}" when="greater" length="0" />		    
		</and>   		    
   		</condition>
   		<condition property="config.browser.chrome.found" else="false">
		<and>
	   		<available file="${browser.chrome}"/>
		    <length string="${browser.chrome}" when="greater" length="0" />		    
		</and>   		    
   		</condition>
   		<condition property="config.browser.opera.found" else="false">
		<and>
	   		<available file="${browser.opera}"/>
		    <length string="${browser.opera}" when="greater" length="0" />		    
		</and>   		    
   		</condition>
   		<condition property="config.browser.safari.found" else="false">
		<and>
	   		<available file="${browser.safari}"/>
		    <length string="${browser.safari}" when="greater" length="0" />		    
		</and>   		    
   		</condition>
		<condition property="config.browser.found" else ="false">
		    <or>
	      		<istrue value="${config.browser.firefox.found}"/>
	      		<istrue value="${config.browser.iexplore.found}"/>
	      		<istrue value="${config.browser.chrome.found}"/>
	      		<istrue value="${config.browser.opera.found}"/>
	      		<istrue value="${config.browser.safari.found}"/>
		    </or>
 		</condition>
 		<echo>Property config.browser.found is set: ${config.browser.found}</echo>
 		
  		<fail unless="${config.browser.found}" message="Missing Browser: No browser found for testing." />
	    
		
		<script language="javascript"
    		description="generates the browser parameter">
		</script>
		<script language="javascript" src="${jsSrcDirBase}tools/ant/AntTestGenerateBrowserParameter.js" />
 		<echo>var.browser-args: ${config.browser.args}</echo>
	    		
	</target>

    <target name="check_config" depends="file-checks, browser-checks" description="Start the server">
	    <echo>jstestdriverbin     : ${jstestdriver.bin}</echo>
  		<available file="${jstestdriver.bin}"  property="config.jstestdriver.found"/>
		<fail unless="config.jstestdriver.found" message="Missing jar-file: ${jstestdriver.bin}" />

		<script language="javascript">
			var jst_runmode = project.getProperty("jstestdriver.runnermode");
//			DEBUG, DEBUG_NO_TRACE, DEBUG_OBSERVE, PROFILE, QUIET (default), INFO
			if (jst_runmode.toUpperCase() == "DEBUG"){
				project.setProperty("config.jstestdriver.runnermode", "DEBUG");
			} else if (jst_runmode.toUpperCase() == "DEBUG_NO_TRACE"){
				project.setProperty("config.jstestdriver.runnermode", "DEBUG_NO_TRACE");
			} else if (jst_runmode.toUpperCase() == "DEBUG_OBSERVE"){
				project.setProperty("config.jstestdriver.runnermode", "DEBUG_OBSERVE");
			} else if (jst_runmode.toUpperCase() == "PROFILE"){
				project.setProperty("config.jstestdriver.runnermode", "PROFILE");
			} else if (jst_runmode.toUpperCase() == "INFO"){
				project.setProperty("config.jstestdriver.runnermode", "INFO");
			} else {
				project.setProperty("config.jstestdriver.runnermode", "QUIET");
			}
		</script>
		
    </target>
    <target name="start-server" depends="check_config" description="Start the server">
    </target>
    <target name="getconfigfiles" depends="check_config" description="Get the config files from the config-directory">
		<!--
		* get the config files and store them in a property
		-->
		
		<macrodef name="getFilelist">
			<attribute name="srcdir"/>
			<attribute name="filter" default="*.conf"/>
			<attribute name="returnproperty" default="getFilelistReturn"/>
			<sequential>
				<fileset id="@{srcdir}" dir="@{srcdir}" includes="@{filter}"/>
				<property name="@{returnproperty}" refid="@{srcdir}" />
			</sequential>
		</macrodef>
		<getFilelist srcdir="drivers" returnproperty="config.files"/>
		<echo>Config files: ${config.files}</echo>
    </target>
	
    <target name="start-test" depends="getconfigfiles" description="Start the server">
		<!--
		* run the jstestdriver with given config file
		-->
		<script language="javascript" src="${jsSrcDirBase}tools/ant/AntTestRunTestdriver.js" />
	</target>
</project>

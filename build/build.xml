<?xml version="1.0"?>

<project name="MMIR build resources" default="copy-resources">
    
    <target name="copy-resources">
        
        <!-- copy resources to parent directory
        	 * ANT scripts and settings
        	 * Cordova hooks for building MMIR apps
        -->
        <copy todir="../" preservelastmodified="true" overwrite="true">
            <fileset dir="resources"/>
        </copy>
		
		<!-- copy files for doc generation -->
		<echo>
  Preparing resources for jsdoc generation...
		</echo>
		
		<property location="${basedir}/../doc" name="target.doc.dir"/>
		
		<copy todir="${target.doc.dir}" preservelastmodified="true" overwrite="true">
            <fileset dir="doc" defaultexcludes="false"/>
        </copy>
        
		
		<!-- print some information for doc generation -->
		<echo>
  For generating API docs, see [project root]/doc:
    ant [jsdoc2 | jsdoc3]
	
  See README.md in [project root]/doc for more information
  on generating docs.
  
        </echo>
		
        <!-- create settings-file from settingsDefault 
        	 (but only, if it is not exists yet)
        -->
        <copy
            file=  "resources/mmir-build.settingsDefault"
            tofile="../mmir-build.settings"
            overwrite="false"/>
        
        
        <!-- print some information for settings-file -->
        <echo>
            
  When updating files, mmir-build.xml and mmir-parse.xml may provide some new 
  (default) build options.
  
  Check, if mmir-build.settingsDefault (compared to mmir-build.settings) has
  changed and see its comments for setting specific build options.
  
  NOTE for Windows 8: 
   if "cordova build" fails and continues to fail due to
   failed compilation of the DialogEngine (or InputEngine)
   you can disable this compilation by setting/enabling
                 
    ignoreDialogEngineCompilation=true
    ignoreInputEngineCompilation=true
  
  in your mmir-build.settings file (in your project's root
  directory)
  
  Explanation:
   on some Windows 8 systems / Java installations, the 
   compilation mechanism for the SCXML files seems to 
   be broken.
   However, the compilation can be disabled without
   problems, since the generated JavaScript files
   are not used anymore (only for verifying correct
   SCXML syntax and generating detailed error 
   information in case of syntax-errors).
            
        </echo>
        
        
        <!-- 
        	 for setting file permissions for UNIX:
        	 set executable-flag for scripts (*.js, *.xml)
         -->
        
		<property location="${basedir}/../" name="targetdir"/>
		
		<!-- 
			only consider files that exist in ./resources/* AND copy-target ./../*:
			map files names from ./resources/* to ./../*
			
			...but only for script files *.js (nodejs) and *.xml (ant) 
		 -->
		<pathconvert property="remappedlist" pathsep=",">
		    <fileset dir="resources" id="source-list" includes="**/*.js,**/*.xml"/>
			<mapper>
			  <globmapper from="${basedir}/resources/*" to="*" handledirsep="yes"/>
			</mapper>
		</pathconvert>
		
		<!-- remapped list of script files: -->
		<fileset id="target.script.files" dir="${targetdir}" includes="${remappedlist}">
		</fileset>
		
		<!-- set the executable flag for file-owner (only applied in UNIX env) -->
		<chmod perm="u+x">
		    <fileset refid="target.script.files"/>
		</chmod>
		
		<!-- print some information for Cordova build files / hooks -->
        <echo>
            
  By default, MMIR build / generation mechanism is triggered for
  
    cordova build
  
  you can change that, e.g. to hook into
    
    cordova prepare
  
  instead, by renaming the directory
  
    [project root]/hooks/before_build
    
  to
  
    [project root]/hooks/before_prepare
            
        </echo>
    </target>
    
</project>

<scxml initial="Main" name="input" version="0.9" xmlns="http://www.w3.org/2005/07/scxml">
 <!--
	Copyright (C) 2012-2013 DFKI GmbH
	Deutsches Forschungszentrum fuer Kuenstliche Intelligenz
	German Research Center for Artificial Intelligence
	http://www.dfki.de

	Permission is hereby granted, free of charge, to any person obtaining a
	copy of this software and associated documentation files (the
	"Software"), to deal in the Software without restriction, including
	without limitation the rights to use, copy, modify, merge, publish,
	distribute, sublicense, and/or sell copies of the Software, and to
	permit persons to whom the Software is furnished to do so, subject to
	the following conditions:

	The above copyright notice and this permission notice shall be included
	in all copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 -->
	<state id="Main" name="Main" initial="Default">

	    <!-- transition event="event" name="event">
	        <script>
	            if( mmir.app.isTactileEvent(_event.data) ){
	            	mmir.InputManager.raise('touch', _event.data);
	            }
	            else if( mmir.app.isSpeechEvent(_event.data) ){
	            	mmir.InputManager.raise('speech', _event.data);
	            }
	        </script>
	    </transition-->

	    <transition event="touch" name="touch" target="Touch" />

	    <transition event="speech" name="speech" target="Speech" />

	    <!-- default state TODO remove? -->
	    <state id="Default" name="Default">
	        <onentry>
	            <script>
	                console.info('InputEngine is in Default state.');
	            </script>
	        </onentry>
	    </state>

	    <!-- process Touch input events: -->
	    <state id="Touch" name="Touch">

					<datamodel>
							<data id="touch_data" expr="null"/>
					</datamodel>

	        <onentry>
	            <script>
	                console.info('entrered Touch with '+ JSON.stringify(_event.data));
	            </script>
	        </onentry>

					<initial name="TouchInitial">
		        <onentry>
		            <assign location="touch_data" expr="_event.data" />
		            <!-- script>console.log('entering initial speech processing state with :'+JSON.stringify(_event))</script-->
		        </onentry>

	            <transition cond="touch_data &amp;&amp; (!touch_data.interpretation || !touch_data.interpretation['function'])" target="RawTouch"/>
	            <transition cond="touch_data &amp;&amp; touch_data.interpretation &amp;&amp; touch_data.interpretation['function'] &amp;&amp; typeof touch_data.interpretation['function'].understanding !== 'undefined'" target="TouchUnderstanding"/>
	            <transition cond="touch_data==null" target="TouchUnknown">
	                <script>console.warn('could not process event :'+JSON.stringify(touch_data))</script>
	            </transition>
	        </initial>

					<state id="RawTouch" name="RawTouch">
		        <onentry>
		            <script>
		                console.warn('entered Touch.Raw with '+ JSON.stringify(touch_data));

		                mmir.DialogManager.raise('touch-raw', touch_data);
		            </script>
		        </onentry>
		    </state>

				<state id="TouchUnderstanding" name="TouchUnderstanding">
					<onentry>
							<script>

									var emma = mmir.DialogManager._emma._extractEmmaFuncData(touch_data, 'understanding');
									console.info('entered Touch.Understanding with '+ JSON.stringify(emma));

									mmir.DialogManager.raise(emma.name, emma.data);
							</script>
					</onentry>
				</state>

				<state id="TouchUnknown" name="TouchUnknown">
					<onentry>
							<script>
									console.error('entered Touch.UNKNOWN with '+ JSON.stringify(touch_data));
							</script>
					</onentry>

				</state>
	    </state>

	    <!-- process Speech input events: -->
	    <state id="Speech" name="Speech">

	        <datamodel>
					    <data id="speech_data" expr="null"/>
					</datamodel>

	        <!-- onentry>
	            <script>console.log('entering Speech state with :'+JSON.stringify(_event))</script>
	            <!- - script src="../../app/test_script.js" /- ->
	        </onentry-->

	        <onexit>
	            <assign location="speech_data" expr="null" />
	            <!-- script>console.log('exiting speech processing state with :'+JSON.stringify(_event))</script-->
	        </onexit>

	        <initial name="SpeechInitial">
		        <onentry>
		            <assign location="speech_data" expr="_event.data" />
		            <!-- script>console.log('entering initial speech processing state with :'+JSON.stringify(_event))</script-->
		        </onentry>

	            <transition cond="speech_data &amp;&amp; typeof speech_data.interpretation['function'].recognition !== 'undefined' &amp;&amp; typeof speech_data.interpretation['function'].understanding === 'undefined'" target="Recognition"/>
	            <transition cond="speech_data &amp;&amp; typeof speech_data.interpretation['function'].understanding !== 'undefined'" target="Understanding"/>
	            <transition cond="speech_data==null" target="Unknown">
	                <script>console.warn('could not process event :'+JSON.stringify(speech_data))</script>
	            </transition>
	        </initial>

	        <transition event="recognition" name="recognition" target="Recognition" />
	        <transition event="understanding" name="understanding" target="Understanding" />

	        <state id="Unknown" name="Unknown">
		        <onentry>
		            <script>
		                console.warn('entered Speech.Unknown with '+ JSON.stringify(speech_data?speech_data:null));
		            </script>
		        </onentry>
		    </state>

	        <state id="Recognition" name="Recognition">
		        <onentry>
		            <script>
		                console.info('entered Speech.Recognition with '+ JSON.stringify(speech_data));

		                mmir.DialogManager.raise('speech-recognition', speech_data);
		            </script>
		        </onentry>
		    </state>

		    <state id="Understanding" name="Understanding">
	        	<onentry>
		            <script>
		                console.info('entrered Speech.Understanding with '+ JSON.stringify(speech_data));
		                mmir.DialogManager.raise('speech-understanding', speech_data);
		            </script>
		        </onentry>
		    </state>
	    </state>

	</state>

</scxml>
